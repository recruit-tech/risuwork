{
  "containerDefinitions": [
    {
      "name": "nginx",
      "image": "{{ must_env `AWS_ACCOUNT_ID` }}.dkr.ecr.ap-northeast-1.amazonaws.com/nginx-repository",
      "cpu": 512,
      "memory": 512,
      "essential": true,
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/nginx",
          "awslogs-region": "ap-northeast-1",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "portMappings": [
        {
          "appProtocol": "http",
          "containerPort": 80,
          "hostPort": 80,
          "name": "nginx-80",
          "protocol": "tcp"
        }
      ],
      "stopTimeout": 2
    },
    {
      "name": "app",
      "image": "{{ must_env `AWS_ACCOUNT_ID` }}.dkr.ecr.ap-northeast-1.amazonaws.com/application-repository",
      "cpu": 512,
      "memory": 2048,
      "essential": true,
      "environment": [
        {
          "name": "DB_HOST",
          "value": "{{ must_env `DB_CLUSTER_HOST` }}"
        },
        {
          "name": "DB_USER",
          "value": "root"
        },
        {
          "name": "DB_PASS",
          "value": "password"
        }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/app",
          "awslogs-region": "ap-northeast-1",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "portMappings": [
        {
          "appProtocol": "http",
          "containerPort": 8080,
          "hostPort": 8080,
          "name": "app-8080",
          "protocol": "tcp"
        }
      ],
      "stopTimeout": 2
    },
    {
      "name": "xray-daemon",
      "image": "amazon/aws-xray-daemon",
      "cpu": 32,
      "memoryReservation": 256,
      "portMappings" : [
        {
          "hostPort": 2000,
          "containerPort": 2000,
          "protocol": "udp"
        }
      ]
    }
  ],
  "executionRoleArn": "arn:aws:iam::{{ must_env `AWS_ACCOUNT_ID` }}:role/ecs-task-execution-role",
  "family": "app",
  "ipcMode": "",
  "networkMode": "awsvpc",
  "pidMode": "",
  "requiresCompatibilities": [
    "EC2"
  ],
  "runtimePlatform": {
    "cpuArchitecture": "X86_64",
    "operatingSystemFamily": "LINUX"
  },
  "taskRoleArn": "arn:aws:iam::{{ must_env `AWS_ACCOUNT_ID` }}:role/ecs-task-role"
}
